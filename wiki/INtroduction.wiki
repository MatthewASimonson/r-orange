#summary A brief description of the structure of our widgets and what they do.

= Introduction =

r-orange attempts to facilitate the use of R by providing a wrapper for common functions and redesigning the entire R work flow from that of sequential function calling to that of a streamlined information processing.  As such, r-orange uses the orange platform to generate work flows (more on the underlying RStructure later).  These work flows can be re-used or modified at any point.  Once changed orange will resend the output of the widgets to be processed downstream.  Because of the computational requirements some of our widgets do not run "on connect" or "on reconnect".  Instead they destroy any downstream outputs once data is reconnected to them.  These widgets must be reprocessed but once processed the data output will proceed automatically until another "kill" call is encountered.  

This platform has many advantages over other GUI based R interaction environments.  To begin with the power of the Qt package can be used for graphics and data interaction to a degree not realized in the R environment or environments relying on Tk.  Another advantage is the access to the rich package repositories of python for data editing and interaction.  Widgets and work flows are very easy to generate and most R functions can be incorporated with ease.

This interface is designed to bring the power of the R statistical environment to the general researcher or user.  As such widgets are designed to operate with a minimum of expertise with every attempt being made to automate criteria selection and to make the many underlying operations invisible to the user.  With that said, this environment is proving useful to even experienced R users because of it's ease in work flow generation and simplicity of processing.  In our experience, often one will want to perform the same task repeatedly on different sets of data (subset -> merge data -> statistical calculation -> subset on significant criteria -> (visualize, record output, save data)).  To achieve this with any reasonable speed one would normally write a function and make multiple calls to that function, a process that may take much time to troubleshoot and would be immutable (an interesting finding would make the user perform the tasks again outside of the function to collect the variables to interrogate).  In r-orange this can be done easily, repeatedly, and at any point other widgets may be connected to those on the canvas for further data mining.